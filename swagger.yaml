openapi: "3.0.0"
info:
  title: "API de Transactions Client"
  description: >
    Documentation de l'API permettant aux clients de gérer leurs transactions personnelles.
    Cette API permet aux utilisateurs de mettre à jour des transactions existantes,
    ainsi que de consulter les transactions regroupées par compte pour le mois en cours.
  version: "1.0.0"
servers:
  - url: "http://api.example.com/v1"
    description: "Serveur principal (Production)"
  - url: "http://staging.api.example.com/v1"
    description: "Serveur de test (Staging)"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          description: "ID unique de la transaction."
        accountId:
          type: string
          description: "ID du compte associé à la transaction."
        userId:
          type: string
          description: "ID de l'utilisateur ayant effectué la transaction."
        date:
          type: string
          format: date
          description: "Date de la transaction."
        description:
          type: string
          description: "Description de la transaction."
        amount:
          type: number
          format: float
          description: "Montant de la transaction."
        balance:
          type: number
          format: float
          description: "Solde après la transaction."
        categorie:
          type: string
          description: "Catégorie de la transaction."
        note:
          type: string
          description: "Note associée à la transaction."
paths:
  /transactions/{transactionId}:
    put:
      summary: "Met à jour une transaction spécifique"
      description: >
        Modifie une transaction spécifique en utilisant son ID.
        Seuls les attributs "categorie" et "note" de la transaction peuvent être modifiés.
      security:
        - BearerAuth: []
      parameters:
        - name: transactionId
          in: path
          required: true
          description: "ID de la transaction à mettre à jour."
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categorie:
                  type: string
                  description: "Nouvelle catégorie de la transaction."
                note:
                  type: string
                  description: "Nouvelle note associée à la transaction."
              required:
                - categorie
                - note
      responses:
        "200":
          description: "Transaction mise à jour avec succès."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: "Requête invalide."
        "404":
          description: "Transaction non trouvée."
        "500":
          description: "Erreur interne du serveur."
  /transactions/grouped/{accountId}:
    get:
      summary: "Récupère les transactions regroupées par compte pour le mois en cours"
      description: >
        Retourne toutes les transactions regroupées par compte associées à l'utilisateur authentifié pour le mois en cours.
        Les comptes sont déterminés automatiquement par le serveur.
      security:
        - BearerAuth: []
      parameters:
        - name: accountId
          in: path
          required: true
          description: "ID du compte pour lequel récupérer les transactions regroupées."
          schema:
            type: string
      responses:
        "200":
          description: "Transactions regroupées par compte pour le mois en cours récupérées avec succès."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: string
                      description: "ID du compte."
                    transactions:
                      type: array
                      items:
                        $ref: "#/components/schemas/Transaction"
        "500":
          description: "Erreur interne du serveur."
  /transactions/detail/{transactionId}:
    get:
      summary: "Récupère les détails d'une transaction spécifique"
      description: "Récupère les détails d'une transaction spécifique en utilisant son ID."
      security:
        - BearerAuth: []
      parameters:
        - name: transactionId
          in: path
          required: true
          description: "ID de la transaction à récupérer."
          schema:
            type: string
      responses:
        "200":
          description: "Détails de la transaction récupérés avec succès."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "400":
          description: "Requête invalide."
        "404":
          description: "Transaction non trouvée."
        "500":
          description: "Erreur interne du serveur."
